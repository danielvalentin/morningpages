<?php defined('SYSPATH') or die('No direct script access.');class Controller_Cms_Ajax_Super extends Controller {		public function action_sortcontenttypes()	{		$data = $_POST;		try		{			foreach($data as $id => $order)			{				$type = ORM::factory('Contenttype',$id);				if($type->loaded())				{					$type->order = $order;					$type->save();				}			}			ajax::success();		}		catch(exception $e)		{			ajax::error($e->getMessage().', File: '.$e->getFile().', Line: '.$e->getLine());		}	}		public function action_duplicateblocktype()	{		$blocktype = ORM::factory('Blocktype', arr::get($_POST, 'id',false));		if(!$blocktype->loaded())		{			ajax::error('Blocktype ikke fundet');		}				try		{			$new = $blocktype->copy();			ajax::success('',array(				'blocktype' => $new->info()			));		}		catch(exception $e)		{			ajax::error($e->getMessage().' '.$e->getFile().' '.$e->getLine());		}	}		public function action_duplicatecontenttypetype()	{		$contenttypetype = ORM::factory('Contenttypetype', arr::get($_POST, 'id',''));		if(!$contenttypetype->loaded())		{			ajax::error('Contenttypetype ikke fundet');		}				try		{			$new = $contenttypetype->copy();			ajax::success('',array(				'contenttypetype' => $new->info()			));		}		catch(exception $e)		{			ajax::error($e->getMessage().' '.$e->getFile().' '.$e->getLine());		}			}		public function action_sortblocktypes()	{		$data = $_POST;		try		{			foreach($data as $id => $order)			{				$type = ORM::factory('Blocktype',$id);				if($type->loaded())				{					$type->order = $order;					$type->save();				}			}			ajax::success();		}		catch(exception $e)		{			ajax::error($e->getMessage().', File: '.$e->getFile().', Line: '.$e->getLine());		}	}		public function action_info()	{		$types = ORM::factory('Contenttype')			->find_all();		$contenttypes = array();		if((bool)$types->count())		{			foreach($types as $type)			{				$contenttypes[] = $type->info();			}		}		ajax::success('', array(			'contenttypes' => $contenttypes		));	}		public function action_addcontenttype()	{		$contenttype = ORM::factory('Contenttype');		$contenttype->type = arr::get($_POST, 'type','');		$contenttype->slug = arr::get($_POST, 'slug','');		$contenttype->max = arr::get($_POST, 'max','');		$contenttype->hierarchical = arr::get($_POST, 'hierarchical','');		$contenttype->has_categories = arr::get($_POST, 'categories','');		$contenttype->has_tags = arr::get($_POST, 'tags','');		$contenttype->has_timestamp = arr::get($_POST, 'timestamp','');		$contenttype->has_thumbnail = arr::get($_POST, 'thumbnail','');		$contenttype->has_author = arr::get($_POST, 'author','');		$contenttype->display = arr::get($_POST, 'display','');		$contenttype->order = ORM::factory('Contenttype')->count_all();		try		{			$contenttype->save();			ajax::success('', array(				'contenttype' => $contenttype->info()			));		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_deletecontenttype()	{		$contenttype = ORM::factory('Contenttype', arr::get($_POST, 'id',''));		if(!$contenttype->loaded())		{			ajax::error('Contenttype ikke fundet');		}		try		{			$contenttype->delete();			ajax::success();		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_editcontenttype()	{		$contenttype = ORM::factory('Contenttype', arr::get($_POST, 'id',''));		if(!$contenttype->loaded())		{			ajax::error('Contenttype ikke fundet');		}		$contenttype->type = arr::get($_POST, 'type','');		$contenttype->slug = arr::get($_POST, 'slug','');		$contenttype->icon = arr::get($_POST, 'icon','');		$contenttype->max = arr::get($_POST, 'max','');		$contenttype->hierarchical = arr::get($_POST, 'hierarchical','');		$contenttype->has_categories = arr::get($_POST, 'categories','');		$contenttype->has_tags = arr::get($_POST, 'tags','');		$contenttype->has_timestamp = arr::get($_POST, 'timestamp','');		$contenttype->has_thumbnail = arr::get($_POST, 'thumbnail','');		$contenttype->has_author = arr::get($_POST, 'author','');		$contenttype->has_status = arr::get($_POST, 'status','');		$contenttype->display = arr::get($_POST, 'display','');		try		{			$check_kids = false;			if($contenttype->changed('slug'))			{				$check_kids = true;			}			$contenttype->save();			if($check_kids)			{				$contents = $contenttype->contents->find_all();				if((bool)$contents->count())				{					foreach($contents as $content)					{						$content->recreate_slug_and_guid();						$content->save();					}				}			}			ajax::success();		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_addcontenttypetype()	{		$contenttype = ORM::factory('Contenttype', arr::get($_POST, 'id',''));		if(!$contenttype->loaded())		{			ajax::error('Contenttype ikke fundet');		}		$contenttypetype = ORM::factory('Contenttypetype');		$contenttypetype->contenttype_id  =$contenttype->id;		$contenttypetype->key = arr::get($_POST, 'key', '');		$contenttypetype->display = arr::get($_POST, 'display', '');		$contenttypetype->min = arr::get($_POST, 'min', 0);		$contenttypetype->max = arr::get($_POST, 'max', 0);		$contenttypetype->order = $contenttype->contenttypetypes->count_all();		try		{			$contenttypetype->save();			$info = $contenttypetype->info();			ajax::success('', array(				'contenttypetype' => $info			));		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_savecontenttypetype()	{		$contenttypetype = ORM::factory('Contenttypetype', arr::get($_POST, 'id',''));		if(!$contenttypetype->loaded())		{			ajax::error('The contenttypetype wasn\'t found. Has it been deleted in the meantime?');		}		$contenttypetype->key = arr::get($_POST, 'key','');		$contenttypetype->display = arr::get($_POST, 'display','');		$contenttypetype->min = arr::get($_POST, 'min','');		$contenttypetype->max = arr::get($_POST, 'max','');		try		{			$contenttypetype->save();			ajax::success(__('Saved'));		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_savecontenttypetypeorders()	{		$data = $_POST;		try		{			foreach($data as $id => $order)			{				$type = ORM::factory('Contenttypetype',$id);				if($type->loaded())				{					$type->order = $order;					$type->save();				}			}			ajax::success();		}		catch(exception $e)		{			ajax::error(__('An error occured and the order couldn\'t be saved: :error',array(				'error' => $e->getMessage()			)));		}	}		public function action_deletecontenttypetype()	{		$contenttypetype = ORM::factory('Contenttypetype', arr::get($_POST, 'id',''));		if(!$contenttypetype->loaded())		{			ajax::error('Contenttypetype ikke fundet');		}		try		{			$contenttypetype->delete();			ajax::success();		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_addblocktype()	{		$contenttypetype = ORM::factory('Contenttypetype', arr::get($_POST, 'contenttypetypeid'));		$blocktype = ORM::factory('Blocktype');		$blocktype->contenttype_id = arr::get($_POST, 'contenttypeid');		$blocktype->contenttypetype_id = arr::get($_POST, 'contenttypetypeid');		$blocktype->parent = arr::get($_POST, 'parent');		$blocktype->type = arr::get($_POST, 'type');		$blocktype->key = arr::get($_POST, 'key');		$blocktype->display = arr::get($_POST, 'display');		$blocktype->min = arr::get($_POST, 'min');		$blocktype->max = arr::get($_POST, 'max');		$blocktype->order = $contenttypetype->blocktypes->count_all();		try		{			$blocktype->save();			ajax::success('', array(				'blocktype' => $blocktype->info()			));		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_deleteblocktype()	{		$blocktype = ORM::factory('Blocktype', arr::get($_POST, 'id',false));		if(!$blocktype->loaded())		{			ajax::error(__('The blocktype wasn\'t found'));		}		try		{			$blocktype->delete();			ajax::success();		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_saveblocktype()	{		$blocktype = ORM::factory('Blocktype', arr::get($_POST, 'id',false));		if(!$blocktype->loaded())		{			ajax::error('The blocktype wasn\'t found');		}		$blocktype->key = arr::get($_POST, 'key','');		$blocktype->display = arr::get($_POST, 'display','');		$blocktype->min = arr::get($_POST, 'min','');		$blocktype->max = arr::get($_POST, 'max','');		try		{			$blocktype->save();			ajax::success('Gemt');		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}		public function action_deletemeta()	{		$meta = ORM::factory('Blocktype_Meta',arr::get($_POST, 'id'));		if(!$meta->loaded())		{			ajax::error(__('The meta information wasn\'t found'));		}		try		{			$meta->delete();			ajax::success();		}		catch(exception $e)		{			ajax::error('An error occurred and the meta information couldn\'t be deleted: :error', array(				':error' => $e->getMessage()			));		}	}		public function action_savemeta()	{		$meta = ORM::factory('Blocktype_Meta',arr::get($_POST, 'id'));		if(!$meta->loaded())		{			ajax::error('The meta information wasn\'t found');		}		$meta->key = arr::get($_POST, 'key','');		$meta->value = arr::get($_POST, 'value','');		try		{			$meta->save();			ajax::success('Metainformation saved');		}		catch(exception $e)		{			ajax::error('An error occurred and the meta information couldn\'t be saved: :error', array(				':error' => $e->getMessage()			));			ajax::error($e->getMessage());		}	}		public function action_addmeta()	{		$meta = ORM::factory('Blocktype_Meta');		$meta->blocktype_id = arr::get($_POST, 'blocktype_id','');		$meta->key = arr::get($_POST, 'key','');		$meta->value = arr::get($_POST, 'value','');		try		{			$meta->save();			ajax::success('',array(				'meta' => $meta->info()			));		}		catch(exception $e)		{			ajax::error($e->getMessage());		}	}	}